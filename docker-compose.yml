services:
  minio:
    image: minio/minio:latest
    container_name: minio
    ports:
      - "9000:9000"      # MinIO API
      - "9001:9001"      # MinIO Console
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    volumes:
      - minio_data:/data
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3
    networks:
      - app-network

  # Create bucket and set policies on startup
  minio-setup:
    image: minio/mc:latest
    container_name: minio-setup
    depends_on:
      minio:
        condition: service_healthy
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
    entrypoint: >
      /bin/sh -c "
      mc alias set minio http://minio:9000 minioadmin minioadmin123;
      mc mb minio/images --ignore-existing;
      mc policy set public minio/images;
      echo 'MinIO setup completed';
      "
    networks:
      - app-network

  imgproxy:
    image: darthsim/imgproxy:latest
    container_name: imgproxy
    ports:
      - "8080:8080"
    environment:
      # Security
      IMGPROXY_KEY: "943b421c9eb07c830af81030552c86009268de4e532ba2ee2eab8247c6da0881"
      IMGPROXY_SALT: "520f986b998545b4785e0defbc4f3c1203f22de2374a3d53cb7a7fe9fea309c5"
      
      # Enable S3 support
      IMGPROXY_USE_S3: "true"
      IMGPROXY_S3_ENDPOINT: "http://minio:9000"
      
      # MinIO credentials (same as above)
      AWS_ACCESS_KEY_ID: "minioadmin"
      AWS_SECRET_ACCESS_KEY: "minioadmin123"
      AWS_REGION: "us-east-1"
      
      # Performance and security settings
      IMGPROXY_MAX_SRC_RESOLUTION: "50"  # 50 megapixels max
      IMGPROXY_QUALITY: "85"
      IMGPROXY_ENABLE_WEBP_DETECTION: "true"
      IMGPROXY_ENFORCE_WEBP: "false"
      IMGPROXY_ALLOWED_SOURCES: "s3://images/"
      
      # Optional: Enable signed URLs for security
      IMGPROXY_SIGNATURE_SIZE: "32"
      
      # Logging
      IMGPROXY_LOG_LEVEL: "info"
    depends_on:
      - minio-setup
    healthcheck:
      test: ["CMD", "imgproxy", "health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - app-network

volumes:
  minio_data:

networks:
  app-network:
    driver: bridge